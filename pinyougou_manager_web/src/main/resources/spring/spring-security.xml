<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
   
	<!-- 设置页面不登陆也可以访问 -->
	<http pattern="/*.html" security="none"/>
	<http pattern="/css/**" security="none"/>
	<http pattern="/img/**" security="none"/>
	<http pattern="/js/**" security="none"/>
	<http pattern="/plugins/**" security="none"/>


	<!--
		页面的拦截规则    use-expressions:是否启动SPEL表达式 默认是true
        当前用户必须有ROLE_USER的角色 才可以访问根目录及所属子目录的资源
        /*
        /**  localhost:9101/brand/findAll.do
        access:必须以"ROLE_"开头
        -->
	<http use-expressions="false">
		<!-- 当前用户必须有ROLE_USER的角色 才可以访问根目录及所属子目录的资源 -->
		<intercept-url pattern="/**" access="ROLE_ADMIN"/>
		<!-- 表单登陆功能
            login-page 自定义登陆页面
            authentication-failure-url 用户权限校验失败之后才会跳转到这个页面，如果数据库中没有这个用户则不会跳转到这个页面。
            default-target-url 登陆成功后跳转的页面。
            username-parameter="user"  指定登录账号属性,默认值为username(一般不会更改)
            password-parameter="pass"  指定登录密码属性,默认值为password(一般不会更改)
            注：登陆页面用户名固定 username，密码 password，action:login -->
		<form-login  login-page="/login.html"
					 default-target-url="/admin/index.html"
					 authentication-failure-url="/login.html"
					 always-use-default-target="true"/>
		<!-- 关闭跨域请求-->
		<csrf disabled="true"/>

		<headers>
			<!--允许使用框架页面-->
			<frame-options policy="SAMEORIGIN"/>
		</headers>

		<!--自动产生一个地址,注销登录-->
		<logout/>
	</http>
	
	<!-- 认证管理器 -->
	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="admin" password="123" authorities="ROLE_ADMIN"/>
				<user name="zz" password="123" authorities="ROLE_ADMIN"/>
			</user-service>
		</authentication-provider>	
	</authentication-manager>
		
</beans:beans>